{"version":3,"sources":["Components/Header.js","Components/Inputs.js","Components/TextPart.js","App.js","index.js"],"names":["Header","props","title","className","Input","handleInputChange","event","target","id","isOk","test","value","setState","isValidColor","inputColor","handleInput","state","isValidBgColor","inputBgColor","this","console","log","localStorage","getItem","style","border","type","placeholder","onChange","e","React","Component","TextPart","color","backgroundColor","bgColor","App","input","setItem","isValid","ReactDOM","render","document","getElementById"],"mappings":"2RAeeA,G,MAXA,SAAAC,GAAU,IACbC,EAAUD,EAAVC,MACR,OACI,yBAAKC,UAAU,oBACX,6BACI,wBAAIA,UAAU,eAAd,IAA8BD,EAA9B,SCgEDE,G,kBAnEZ,WAAYH,GAAO,IAAD,8BACf,4CAAMA,KAUTI,kBAAoB,SAAAC,GAEjB,GAAwB,eAApBA,EAAMC,OAAOC,GAAqB,CACnC,IAAIC,EAAO,yBAAyBC,KAAKJ,EAAMC,OAAOI,QAAkC,KAAxBL,EAAMC,OAAOI,MAC9E,OAAO,EAAKC,SAAS,CAAEC,aAAeJ,EAAOK,WAAYR,EAAMC,OAAOI,QAClE,kBAAI,EAAKV,MAAMc,YAAY,aAAe,EAAKC,MAAMF,eAGpD,GAAwB,iBAApBR,EAAMC,OAAOC,GAAwB,CAC7C,IAAIC,EAAO,yBAAyBC,KAAKJ,EAAMC,OAAOI,QAAiC,KAAvBL,EAAMC,OAAOI,MAC9E,OAAO,EAAKC,SAAS,CAAEK,eAAiBR,EAAOS,aAAcZ,EAAMC,OAAOI,QACtE,kBAAI,EAAKV,MAAMc,YAAY,eAAiB,EAAKC,MAAME,mBApB7D,EAAKF,MAAO,CACTF,WAAa,GACbI,aAAe,GACfL,cAAe,EACfI,gBAAiB,GANL,E,sEA4BT,IAAD,SACqCE,KAAKH,MAAvCH,EADH,EACGA,aAAeI,EADlB,EACkBA,eAG1B,OAFEG,QAAQC,IAAIC,cAGZ,yBAAKnB,UAAU,cACb,yBAAKA,UAAU,wBAAf,UAEG,6BACG,2BACAQ,MAAOW,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,cAAgB,GACjFC,MAAO,CAAEC,OAAM,oBAAgBZ,EAAe,QAAU,QACxDa,KAAK,OACLvB,UAAU,QACVK,GAAG,aACHmB,YAAY,eACZC,SAAU,SAACC,GAAD,OAAK,EAAKxB,kBAAkBwB,QAI5C,yBAAK1B,UAAU,yBAAf,YAEG,6BACG,2BACAQ,MAAOW,aAAaC,QAAQ,gBAAkBD,aAAaC,QAAQ,gBAAkB,GACrFC,MAAO,CAAEC,OAAM,oBAAgBR,EAAiB,QAAU,QAC1DS,KAAK,OACLvB,UAAU,QACVK,GAAG,eACHmB,YAAY,eACZC,SAAU,SAACC,GAAD,OAAK,EAAKxB,kBAAkBwB,a,GA3D/BC,IAAMC,YC+BXC,G,MAjCE,SAAC/B,GAAU,IACjBgC,EAAoBhC,EAApBgC,MACJT,EAAQ,CACVU,gBAF0BjC,EAAZkC,QAGdF,MAAQA,GAGV,OADAb,QAAQC,IAAIG,GAER,yBAAKrB,UAAU,iBAAiBqB,MAAOA,GACnC,yBAAKrB,UAAU,YACX,y9BCyBAiC,E,YA/BX,aAAe,IAAD,8BACV,+CAOJrB,YAAc,SAAEP,EAAK6B,GACN,eAAP7B,GACAc,aAAagB,QAAQ,aAAeD,GACrC,EAAKzB,SAAS,CAAEE,WAAauB,KACb,iBAAP7B,IACRc,aAAagB,QAAQ,eAAiBD,GACtC,EAAKzB,SAAS,CAAEM,aAAemB,MAZnC,EAAKrB,MAAQ,CACTF,WAAYQ,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,cAAgB,GACtFL,aAAcI,aAAaC,QAAQ,gBAAkBD,aAAaC,QAAQ,gBAAkB,IAJtF,E,sEAkBJ,IAAD,EAC0CJ,KAAKH,MAA5CF,EADH,EACGA,WAAYI,EADf,EACeA,aAAeqB,EAD9B,EAC8BA,QAEnC,OADAnB,QAAQC,IAAIkB,GAER,oCACI,kBAAC,EAAD,CAAQrC,MAAM,0BACd,kBAAC,EAAD,CAAQa,YAAaI,KAAKJ,cAC1B,kBAAC,EAAD,CAAUkB,MAAOnB,EAAYqB,QAASjB,S,GA1BpCY,IAAMC,WCAxBS,IAASC,OAAQ,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.4790ad65.chunk.js","sourcesContent":["import React from \"react\";\r\n// Compornents\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => {\r\n    const { title } = props;\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div>\r\n                <h1 className=\"header-text\"> {title} </h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n// Components\r\nimport './Inputs.css'\r\n\r\n\r\nclass Input extends React.Component{\r\n   constructor(props){\r\n      super(props)\r\n      this.state ={\r\n         inputColor : '',\r\n         inputBgColor : '',\r\n         isValidColor : true ,\r\n         isValidBgColor : true ,\r\n      }\r\n   }\r\n   \r\n\r\n   handleInputChange = event => {\r\n\r\n      if (event.target.id === \"inputColor\") {\r\n         let isOk = /^#([0-9A-F]{3}){1,2}$/i.test(event.target.value) || event.target.value  === '';\r\n        return this.setState({ isValidColor : isOk , inputColor: event.target.value},\r\n            ()=>this.props.handleInput(\"inputColor\" , this.state.inputColor )\r\n            ) \r\n         \r\n      } else if (event.target.id === \"inputBgColor\" ) {\r\n         let isOk = /^#([0-9A-F]{3}){1,2}$/i.test(event.target.value) || event.target.value === '';\r\n        return this.setState({ isValidBgColor : isOk , inputBgColor: event.target.value},\r\n            ()=>this.props.handleInput(\"inputBgColor\" , this.state.inputBgColor )\r\n            )\r\n      }\r\n  };\r\n\r\n\r\n   render(){\r\n     const  { isValidColor , isValidBgColor } = this.state\r\n     console.log(localStorage)\r\n\r\n   return(\r\n     <div className='input-part'>\r\n       <div className='left-input-container'>\r\n          Color :\r\n          <div>\r\n             <input \r\n             value={localStorage.getItem('inputColor') ? localStorage.getItem('inputColor') : ''}\r\n             style={{ border : `1px solid ${isValidColor ? 'green' : 'red'}`}}\r\n             type='text' \r\n             className='input' \r\n             id='inputColor' \r\n             placeholder='Start with #' \r\n             onChange={(e)=>this.handleInputChange(e )}/>\r\n          </div>\r\n       </div>\r\n\r\n       <div className='right-input-container'>\r\n          BgColor :\r\n          <div>\r\n             <input \r\n             value={localStorage.getItem('inputBgColor') ? localStorage.getItem('inputBgColor') : ''}\r\n             style={{ border : `1px solid ${isValidBgColor ? 'green' : 'red'}`}}\r\n             type='text' \r\n             className='input'\r\n             id='inputBgColor'\r\n             placeholder='Start with #' \r\n             onChange={(e)=>this.handleInputChange(e )} />\r\n          </div>\r\n       </div>\r\n     </div>\r\n   ) \r\n   }\r\n   \r\n}\r\n\r\nexport default Input","import React from 'react';\r\nimport './TextPart.css'; \r\n\r\nconst TextPart = (props) =>{\r\n   const { color , bgColor } = props\r\n   let style = {\r\n     backgroundColor : bgColor,\r\n     color : color,\r\n   }\r\n   console.log(style)\r\n   return (\r\n       <div className=\"text-container\" style={style}>\r\n           <div className='text-div'>\r\n               <p>\r\n                   XHR is embedded. ES is also used by calling one of this: much\r\n                   of software modules, defined by caching the server. Googleâ€™s\r\n                   open source JavaScript as some kind of Node. dependents,\r\n                   called observers, and video. simplifying a fast development.\r\n                   Furthermore, JavaScript modules asynchronously. Modernizr is\r\n                   like Node. Linked Data. Chakra is used at Yandex for creating\r\n                   Web pages hosted on data to modify page. Function is a pure\r\n                   JavaScript code linter. Q is the performance. Express is a\r\n                   super-set of JavaScript was never intended to be created for\r\n                   other domains. RequireJS is a library that will be resolved.\r\n                   Chakra is the Document Object Model DOM of this usage are:\r\n                   Loading new page content for the intermediate to make it\r\n                   changes in software design pattern in JavaScript, and used\r\n                   when a 2D graphics on a client and regular expressions, but\r\n                   that uses factory methods and playing audio and style of Ajax\r\n                   without all the standardized specification.\r\n               </p>\r\n           </div>\r\n       </div>\r\n   );\r\n}\r\n\r\nexport default TextPart","import React from \"react\";\r\n// Components\r\nimport Header from \"./Components/Header\";\r\nimport Inputs from \"./Components/Inputs\";\r\nimport TextPart from \"./Components/TextPart\";\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inputColor: localStorage.getItem('inputColor') ? localStorage.getItem('inputColor') : '' ,\r\n            inputBgColor: localStorage.getItem('inputBgColor') ? localStorage.getItem('inputBgColor') : '',\r\n        };\r\n    }\r\n    \r\n    handleInput = ( id , input) =>{\r\n        if( id === 'inputColor'){\r\n            localStorage.setItem('inputColor' , input)\r\n           this.setState({ inputColor : input})\r\n          } else if(id === 'inputBgColor'){\r\n            localStorage.setItem('inputBgColor' , input)\r\n            this.setState({ inputBgColor : input})\r\n          }\r\n    }\r\n\r\n    render() {\r\n        const { inputColor, inputBgColor , isValid } = this.state;\r\n        console.log(isValid)\r\n        return (\r\n            <>\r\n                <Header title=\"color changing page!!\" />\r\n                <Inputs handleInput={this.handleInput} />\r\n                <TextPart color={inputColor} bgColor={inputBgColor}  />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// Components\nimport App from './App'\n\n\nReactDOM.render( <App /> , document.getElementById('root'))\n"],"sourceRoot":""}