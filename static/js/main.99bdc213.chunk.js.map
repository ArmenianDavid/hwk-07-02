{"version":3,"sources":["Components/Header.js","Components/Inputs.js","Components/TextPart.js","Components/PoweredBy/PoweredBy.js","App.js","index.js"],"names":["Header","props","title","className","Input","handleInputChange","event","target","id","isOk","test","value","setState","isValidColor","inputColor","handleInput","state","isValidBgColor","inputBgColor","this","console","log","localStorage","getItem","style","border","type","placeholder","onChange","e","React","Component","TextPart","color","backgroundColor","bgColor","PoweredBy","text","name","App","input","setItem","isValid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99bdc213.chunk.js","sourcesContent":["import React from \"react\";\r\n// Compornents\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => {\r\n    const { title } = props;\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div>\r\n                <h1 className=\"header-text\"> {title} </h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n// Components\r\nimport \"./Inputs.css\";\r\n\r\nclass Input extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputColor: \"\",\r\n            inputBgColor: \"\",\r\n            isValidColor: true,\r\n            isValidBgColor: true\r\n        };\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        if (event.target.id === \"inputColor\") {\r\n            let isOk =\r\n                /^#([0-9A-F]{3}){1,2}$/i.test(event.target.value) ||\r\n                event.target.value === \"\";\r\n            return this.setState(\r\n                { isValidColor: isOk, inputColor: event.target.value },\r\n                () =>\r\n                    this.props.handleInput(\"inputColor\", this.state.inputColor)\r\n            );\r\n        } else if (event.target.id === \"inputBgColor\") {\r\n            let isOk =\r\n                /^#([0-9A-F]{3}){1,2}$/i.test(event.target.value) ||\r\n                event.target.value === \"\";\r\n            return this.setState(\r\n                { isValidBgColor: isOk, inputBgColor: event.target.value },\r\n                () =>\r\n                    this.props.handleInput(\r\n                        \"inputBgColor\",\r\n                        this.state.inputBgColor\r\n                    )\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isValidColor, isValidBgColor } = this.state;\r\n        console.log(localStorage);\r\n\r\n        return (\r\n            <div className=\"input-part\">\r\n                <div className=\"left-input-container\">\r\n                    Color :\r\n                    <div>\r\n                        <input\r\n                            value={\r\n                                localStorage.getItem(\"inputColor\")\r\n                                    ? localStorage.getItem(\"inputColor\")\r\n                                    : \"\"\r\n                            }\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    isValidColor ? \"green\" : \"red\"\r\n                                }`\r\n                            }}\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            id=\"inputColor\"\r\n                            placeholder=\"Start with #\"\r\n                            onChange={e => this.handleInputChange(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"right-input-container\">\r\n                    BgColor :\r\n                    <div>\r\n                        <input\r\n                            value={\r\n                                localStorage.getItem(\"inputBgColor\")\r\n                                    ? localStorage.getItem(\"inputBgColor\")\r\n                                    : \"\"\r\n                            }\r\n                            style={{\r\n                                border: `1px solid ${\r\n                                    isValidBgColor ? \"green\" : \"red\"\r\n                                }`\r\n                            }}\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            id=\"inputBgColor\"\r\n                            placeholder=\"Start with #\"\r\n                            onChange={e => this.handleInputChange(e)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./TextPart.css\";\r\n\r\nconst TextPart = props => {\r\n    const { color, bgColor } = props;\r\n    let style = {\r\n        backgroundColor: bgColor,\r\n        color: color\r\n    };\r\n    console.log(style);\r\n    return (\r\n        <div className=\"text-container\" style={style}>\r\n            <div className=\"text-div\">\r\n                <p>\r\n                    XHR is embedded. ES is also used by calling one of this:\r\n                    much of software modules, defined by caching the server.\r\n                    Googleâ€™s open source JavaScript as some kind of Node.\r\n                    dependents, called observers, and video. simplifying a fast\r\n                    development. Furthermore, JavaScript modules asynchronously.\r\n                    Modernizr is like Node. Linked Data. Chakra is used at\r\n                    Yandex for creating Web pages hosted on data to modify page.\r\n                    Function is a pure JavaScript code linter. Q is the\r\n                    performance. Express is a super-set of JavaScript was never\r\n                    intended to be created for other domains. RequireJS is a\r\n                    library that will be resolved. Chakra is the Document Object\r\n                    Model DOM of this usage are: Loading new page content for\r\n                    the intermediate to make it changes in software design\r\n                    pattern in JavaScript, and used when a 2D graphics on a\r\n                    client and regular expressions, but that uses factory\r\n                    methods and playing audio and style of Ajax without all the\r\n                    standardized specification.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextPart;\r\n","import React from \"react\";\r\nimport \"./PoweredBy.css\";\r\n\r\nconst PoweredBy = props => {\r\n    const { text, name } = props;\r\n    return (\r\n        <div className=\"info-container\">\r\n            <div className=\"info\">\r\n                <div>\r\n                    <span>{text}</span> <span>{name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PoweredBy;\r\n","import React from \"react\";\r\n// Components\r\nimport Header from \"./Components/Header\";\r\nimport Inputs from \"./Components/Inputs\";\r\nimport TextPart from \"./Components/TextPart\";\r\nimport PoweredBy from \"./Components/PoweredBy/PoweredBy\";\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inputColor: localStorage.getItem(\"inputColor\")\r\n                ? localStorage.getItem(\"inputColor\")\r\n                : \"\",\r\n            inputBgColor: localStorage.getItem(\"inputBgColor\")\r\n                ? localStorage.getItem(\"inputBgColor\")\r\n                : \"\"\r\n        };\r\n    }\r\n\r\n    handleInput = (id, input) => {\r\n        if (id === \"inputColor\") {\r\n            localStorage.setItem(\"inputColor\", input);\r\n            this.setState({ inputColor: input });\r\n        } else if (id === \"inputBgColor\") {\r\n            localStorage.setItem(\"inputBgColor\", input);\r\n            this.setState({ inputBgColor: input });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputColor, inputBgColor, isValid } = this.state;\r\n        console.log(isValid);\r\n        return (\r\n            <>\r\n                <Header title=\"color changing page!!\" />\r\n                <Inputs handleInput={this.handleInput} />\r\n                <TextPart color={inputColor} bgColor={inputBgColor} />\r\n                <PoweredBy text=\"Powered By\" name=\"Davit Sahakyan\" />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Components\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}